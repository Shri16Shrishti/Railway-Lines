// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Railway_lines.Model;

#nullable disable

namespace Railway_lines.Migrations
{
    [DbContext(typeof(RailwayContext))]
    partial class RailwayContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Railway_lines.Model.BookingDetailsTable", b =>
                {
                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("Booking_Id");

                    b.Property<DateOnly>("BookingDate")
                        .HasColumnType("date")
                        .HasColumnName("Booking_Date");

                    b.Property<string>("BookingStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Booking_Status");

                    b.Property<DateOnly>("BookingTime")
                        .HasColumnType("date")
                        .HasColumnName("Booking_Time");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_Id");

                    b.Property<int>("DestinationStationId")
                        .HasColumnType("int")
                        .HasColumnName("Destination_Station_Id");

                    b.Property<decimal>("Fare")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly>("JourneyDate")
                        .HasColumnType("date")
                        .HasColumnName("Journey_Date");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Seat_Number");

                    b.Property<int>("SourceStationId")
                        .HasColumnType("int")
                        .HasColumnName("Source_Station_Id");

                    b.Property<int>("TrainId")
                        .HasColumnType("int")
                        .HasColumnName("Train_Id");

                    b.HasKey("BookingId");

                    b.ToTable("BookingDetailsTable", (string)null);
                });

            modelBuilder.Entity("Railway_lines.Model.TrainDetailsTable", b =>
                {
                    b.Property<int>("TrainId")
                        .HasColumnType("int")
                        .HasColumnName("Train_Id");

                    b.Property<TimeOnly>("ArrivalTime")
                        .HasPrecision(3)
                        .HasColumnType("time(3)")
                        .HasColumnName("Arrival_Time");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int")
                        .HasColumnName("Available_Seats");

                    b.Property<TimeOnly>("DepartureTime")
                        .HasPrecision(3)
                        .HasColumnType("time(3)")
                        .HasColumnName("Departure_Time");

                    b.Property<int?>("DestinationStationId")
                        .HasColumnType("int")
                        .HasColumnName("Destination_Station_Id");

                    b.Property<decimal?>("Fare")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<TimeOnly?>("JourneyDuration")
                        .HasPrecision(3)
                        .HasColumnType("time(3)")
                        .HasColumnName("Journey_Duration");

                    b.Property<int?>("SouceStationId")
                        .HasColumnType("int")
                        .HasColumnName("Souce_Station_Id");

                    b.Property<int?>("TotalSeats")
                        .HasColumnType("int")
                        .HasColumnName("Total_Seats");

                    b.Property<string>("TrainName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Train_Name");

                    b.Property<string>("TrainType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Train_Type");

                    b.HasKey("TrainId");

                    b.ToTable("Train_DetailsTable", (string)null);
                });

            modelBuilder.Entity("Railway_lines.Model.UserNameTable", b =>
                {
                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Password");

                    b.ToTable("UserNameTable", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
